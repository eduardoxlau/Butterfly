{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelsanchez/bytecore/Butterfly/packages/front/src/pages/survey/Header/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { moods } from \"../../../utils/types\";\nimport { Span } from \"../../home/styled\";\nimport { ChangeMoodContainer, Header, MoodContainer, MoodImage, WrapperMoodsImage } from \"./styled\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HeaderContent = _ref => {\n  _s();\n  let {\n    setMood\n  } = _ref;\n  let {\n    id\n  } = useParams();\n  const [isEditMood, setEditMood] = useState(false);\n  const mood = moods.find(mood => mood.id === Number(id));\n  if (!mood) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Error\"\n  }, void 0, false);\n  return /*#__PURE__*/_jsxDEV(Header, {\n    children: isEditMood ? /*#__PURE__*/_jsxDEV(ChangeMoodContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Span, {\n        color: \"#fff\",\n        bold: true,\n        children: \"Did you make a mistake? Please select your correct mood:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(WrapperMoodsImage, {\n        children: moods.map(_ref2 => {\n          let {\n            id,\n            path\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${id}`,\n            children: /*#__PURE__*/_jsxDEV(MoodImage, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: process.env.PUBLIC_URL + path,\n                className: id === mood.id ? \"active\" : \"otra\",\n                alt: \"\",\n                onClick: () => {\n                  setEditMood(false);\n                  setMood(id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MoodContainer, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          onClick: () => setEditMood(true),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: process.env.PUBLIC_URL + mood.path,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Span, {\n          color: \"#ffffff\",\n          fontSize: \"1.2rem\",\n          margin: \"1rem\",\n          children: mood.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Span, {\n          fontSize: \"0.8rem\",\n          color: \"#41E6CD\",\n          margin: \"1rem\",\n          children: \"Your answers will always remain anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(HeaderContent, \"Gs/26MNLVhmLFkb+obm5yz2xRaE=\", false, function () {\n  return [useParams];\n});\n_c = HeaderContent;\nvar _c;\n$RefreshReg$(_c, \"HeaderContent\");","map":{"version":3,"names":["useState","Link","useParams","moods","Span","ChangeMoodContainer","Header","MoodContainer","MoodImage","WrapperMoodsImage","HeaderContent","setMood","id","isEditMood","setEditMood","mood","find","Number","map","path","process","env","PUBLIC_URL","message"],"sources":["/Users/rafaelsanchez/bytecore/Butterfly/packages/front/src/pages/survey/Header/index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Mood, moods } from \"../../../utils/types\";\nimport { Span } from \"../../home/styled\";\nimport {\n  ChangeMoodContainer,\n  Header,\n  MoodContainer,\n  MoodImage,\n  WrapperMoodsImage,\n} from \"./styled\";\n\nexport const HeaderContent = ({ setMood }: { setMood: any }) => {\n  let { id } = useParams();\n\n  const [isEditMood, setEditMood] = useState<boolean>(false);\n\n  const mood: Mood | undefined = moods.find((mood) => mood.id === Number(id));\n\n  if (!mood) return <>Error</>;\n\n  return (\n    <Header>\n      {isEditMood ? (\n        <ChangeMoodContainer>\n          <Span color=\"#fff\" bold={true}>\n            Did you make a mistake? Please select your correct mood:\n          </Span>\n          <WrapperMoodsImage>\n            {moods.map(({ id, path }) => (\n              <Link to={`/${id}`} key={id}>\n                <MoodImage>\n                  <img\n                    src={process.env.PUBLIC_URL + path}\n                    className={id === mood.id ? \"active\" : \"otra\"}\n                    alt=\"\"\n                    onClick={() => {\n                      setEditMood(false);\n                      setMood(id);\n                    }}\n                  />\n                </MoodImage>\n              </Link>\n            ))}\n          </WrapperMoodsImage>\n        </ChangeMoodContainer>\n      ) : (\n        <>\n          <MoodContainer>\n            <Link to=\"\" onClick={() => setEditMood(true)}>\n              <span />\n              <img src={process.env.PUBLIC_URL + mood.path} alt=\"\" />\n            </Link>\n          </MoodContainer>\n          <div>\n            <Span color=\"#ffffff\" fontSize=\"1.2rem\" margin=\"1rem\">\n              {mood.message}\n            </Span>\n            <Span fontSize=\"0.8rem\" color=\"#41E6CD\" margin=\"1rem\">\n              Your answers will always remain anonymous\n            </Span>\n          </div>\n        </>\n      )}\n    </Header>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAAeC,KAAK,QAAQ,sBAAsB;AAClD,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SACEC,mBAAmB,EACnBC,MAAM,EACNC,aAAa,EACbC,SAAS,EACTC,iBAAiB,QACZ,UAAU;AAAC;AAAA;AAElB,OAAO,MAAMC,aAAa,GAAG,QAAmC;EAAA;EAAA,IAAlC;IAAEC;EAA0B,CAAC;EACzD,IAAI;IAAEC;EAAG,CAAC,GAAGV,SAAS,EAAE;EAExB,MAAM,CAACW,UAAU,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAU,KAAK,CAAC;EAE1D,MAAMe,IAAsB,GAAGZ,KAAK,CAACa,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKK,MAAM,CAACL,EAAE,CAAC,CAAC;EAE3E,IAAI,CAACG,IAAI,EAAE,oBAAO;IAAA;EAAA,iBAAU;EAE5B,oBACE,QAAC,MAAM;IAAA,UACJF,UAAU,gBACT,QAAC,mBAAmB;MAAA,wBAClB,QAAC,IAAI;QAAC,KAAK,EAAC,MAAM;QAAC,IAAI,EAAE,IAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvB,eACP,QAAC,iBAAiB;QAAA,UACfV,KAAK,CAACe,GAAG,CAAC;UAAA,IAAC;YAAEN,EAAE;YAAEO;UAAK,CAAC;UAAA,oBACtB,QAAC,IAAI;YAAC,EAAE,EAAG,IAAGP,EAAG,EAAE;YAAA,uBACjB,QAAC,SAAS;cAAA,uBACR;gBACE,GAAG,EAAEQ,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGH,IAAK;gBACnC,SAAS,EAAEP,EAAE,KAAKG,IAAI,CAACH,EAAE,GAAG,QAAQ,GAAG,MAAO;gBAC9C,GAAG,EAAC,EAAE;gBACN,OAAO,EAAE,MAAM;kBACbE,WAAW,CAAC,KAAK,CAAC;kBAClBH,OAAO,CAACC,EAAE,CAAC;gBACb;cAAE;gBAAA;gBAAA;gBAAA;cAAA;YACF;cAAA;cAAA;cAAA;YAAA;UACQ,GAXWA,EAAE;YAAA;YAAA;YAAA;UAAA,QAYpB;QAAA,CACR;MAAC;QAAA;QAAA;QAAA;MAAA,QACgB;IAAA;MAAA;MAAA;MAAA;IAAA,QACA,gBAEtB;MAAA,wBACE,QAAC,aAAa;QAAA,uBACZ,QAAC,IAAI;UAAC,EAAE,EAAC,EAAE;UAAC,OAAO,EAAE,MAAME,WAAW,CAAC,IAAI,CAAE;UAAA,wBAC3C;YAAA;YAAA;YAAA;UAAA,QAAQ,eACR;YAAK,GAAG,EAAEM,OAAO,CAACC,GAAG,CAACC,UAAU,GAAGP,IAAI,CAACI,IAAK;YAAC,GAAG,EAAC;UAAE;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MAClD;QAAA;QAAA;QAAA;MAAA,QACO,eAChB;QAAA,wBACE,QAAC,IAAI;UAAC,KAAK,EAAC,SAAS;UAAC,QAAQ,EAAC,QAAQ;UAAC,MAAM,EAAC,MAAM;UAAA,UAClDJ,IAAI,CAACQ;QAAO;UAAA;UAAA;UAAA;QAAA,QACR,eACP,QAAC,IAAI;UAAC,QAAQ,EAAC,QAAQ;UAAC,KAAK,EAAC,SAAS;UAAC,MAAM,EAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAE9C;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;EAET;IAAA;IAAA;IAAA;EAAA,QACM;AAEb,CAAC;AAAC,GAtDWb,aAAa;EAAA,QACXR,SAAS;AAAA;AAAA,KADXQ,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}